// This is auto-generated by Datastar. DO NOT EDIT.
const lol = /ðŸ–•JS_DSðŸš€/.source
export const DSP = lol.slice(0, 5)
export const DSS = lol.slice(4)

export const DATASTAR = "datastar";
export const DATASTAR_REQUEST = "Datastar-Request";

// #region Defaults

// #region Default durations

// The default duration for retrying SSE on connection reset. This is part of the underlying retry mechanism of SSE.
export const DefaultSseRetryDurationMs = 1000;

// #endregion


// #region Default strings


// #endregion


// #region Default booleans

// Should elements be merged using the ViewTransition API?
export const DefaultElementsUseViewTransitions = false;

// Should a given set of signals merge if they are missing?
export const DefaultMergeSignalsOnlyIfMissing = false;

// #endregion


// #region Enums

// The mode in which an element is patched into the DOM.
export const ElementPatchModes = {
    // Morphs the element into the existing element using Datastarâ€™s morphing, preserving focus and minimizing element changes.
    Outer: "outer",
    // Morphs the element into the innerHTML using Datastarâ€™s morphing, preserving focus and minimizing element changes.
    Inner: "inner",
    // Removes the existing element from the DOM.
    Remove: "remove",
    // Prepends the element inside the existing element.
    Prepend: "prepend",
    // Appends the element inside the existing element.
    Append: "append",
    // Inserts the element before the existing element.
    Before: "before",
    // Inserts the element after the existing element.
    After: "after",
    // Do not morph, simply replace the whole element and reset any related state.
    Replace: "replace",
} as const;

// Default value for ElementPatchMode
export const DefaultElementPatchMode = ElementPatchModes.Outer;

// The type protocol on top of SSE which allows for core pushed based communication between the server and the client.
export const EventTypes = {
    // An event for patching HTML elements into the DOM.
    PatchElements: "datastar-patch-elements",
    // An event for patching signals.
    PatchSignals: "datastar-patch-signals",
} as const;
// #endregion

// #endregion